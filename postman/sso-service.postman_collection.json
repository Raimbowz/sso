{
	"info": {
		"_postman_id": "e1a5b2c3-d4e5-f6g7-h8i9-j0k1l2m3n4o5",
		"name": "SEO CRM - SSO Service",
		"description": "API collection for SSO Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123!\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{sso_url}}/auth/register",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.accessToken);",
									"pm.environment.set(\"refresh_token\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "{{sso_url}}/auth/login",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login and get access token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.accessToken);",
									"pm.environment.set(\"refresh_token\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{sso_url}}/auth/refresh",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Refresh access token"
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{access_token}}\"\n}"
						},
						"url": {
							"raw": "{{sso_url}}/auth/validate-token",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"auth",
								"validate-token"
							]
						},
						"description": "Validate access token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{sso_url}}/auth/logout",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate access token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{sso_url}}/users",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Get all users (admin only)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{sso_url}}/users/1",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get user by ID (admin only)"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123!\",\n    \"firstName\": \"Regular\",\n    \"lastName\": \"User\",\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{sso_url}}/users",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new user (admin only)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Updated\",\n    \"lastName\": \"User\"\n}"
						},
						"url": {
							"raw": "{{sso_url}}/users/2",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"users",
								"2"
							]
						},
						"description": "Update user by ID (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{sso_url}}/users/2",
							"host": [
								"{{sso_url}}"
							],
							"path": [
								"users",
								"2"
							]
						},
						"description": "Delete user by ID (admin only)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "sso_url",
			"value": "http://localhost:3001",
			"type": "string"
		}
	]
} 